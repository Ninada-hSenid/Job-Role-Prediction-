import pandas as pd
import numpy as np
tr        = "../Data/train.csv"
ts        = "../Data/test.csv"
train = pd.read_csv(tr)
test  = pd.read_csv(ts)
#wines = np.genfromtxt("./roo1.csv", delimiter=";", skip_header=1)
data = np.loadtxt(tr, delimiter=',', skiprows=1)
print(data.shape)
myu,sig = [],[]
for i in range(14):
    mean = np.mean(data[:,i])
    myu.append(mean)
    sigm = np.sum(np.square(data[:,i]-mean))/(data.shape[0]-1)
    sigm = sigm**0.5
    sig.append(sigm)
    data[:,i] = (data[:,i]-mean)/sigm
                                            
print(myu,sig) 
# Normalising the marks columns (1-9)
# myu = [77.0187165775401, 76.95347593582888, 77.03683155080213, 77.11737967914439, 76.94017379679144, 76.98877005347593, 77.07640374331551, 76.91136363636363, 76.93155080213904, 7.981483957219251, 5.002272727272727, 2.973663101604278, 5.01096256684492, 5.0034090909090905]
# sig = [10.073421086091772, 10.098954279959996, 10.152025460548993, 10.110268046569738, 10.013252317634432, 10.182505039307635, 10.09926555837586, 10.159344373807292, 10.102310732331906, 2.588598147147264, 2.581461399912868, 2.006934020051923, 2.5768773650054673, 2.5781303709076844]
#array contains variance of all train columns


for i in range(14):
    train.iloc[:,i] = (train.iloc[:,i] - myu[i])/sig[i]
    test.iloc[:,i] = (test.iloc[:,i] - myu[i])/sig[i]
    
with open(tr, 'w', encoding='utf-8') as f:
    train.to_csv(f, index=False)

with open(ts, 'w', encoding='utf-8') as f:
    test.to_csv(f, index=False)

'''(14960, 127)
[3.538464827147558e-17, 4.0965448502211656e-18, 6.358550050125897e-17, -9.119265057883639e-17, 3.4375354612725436e-17, 5.3908155420301716e-17, -2.208572006206194e-17, 6.032013866412615e-17, -6.964126245375982e-17, 7.981483957219251, 5.002272727272727, 2.973663101604278, 5.01096256684492, 5.0034090909090905] [0.12968305194585425, 0.1301145651728668, 0.13064756906598457, 0.12998569459503995, 0.12905078063573536, 0.13111348319724045, 0.12991448933079838, 0.13094977373043148, 0.13019354259642532, 8.390737667787361, 5.629052313358268, 3.5875043088162837, 5.634678245515114, 5.628535727745065]
'''